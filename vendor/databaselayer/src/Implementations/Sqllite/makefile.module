# Define your module based settings

#    DMF Distributed Multiplatform Framework (the initial goal of this library)
#    This file is part of lbDMF.
#    Copyright (C) 2002  Lothar Behrens (lothar.behrens@lollisoft.de)
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation; either
#    version 2.1 of the License, or (at your option) any later version.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#
#    The author of this work will be reached by e-Mail or paper mail.
#    e-Mail: lothar.behrens@lollisoft.de
#    p-Mail: Lothar Behrens
#            Ginsterweg 4
#
#            65760 Eschborn (germany)


ifeq ($(OSTYPE), Windows_NT)
SLASH=/
wxBase=$(DEVROOT_MINGW)$(SLASH)wxwin$(SLASH)wx$(SLASH)lib

MOD_INCL_MINGW = $(STD_INCL_MINGW) -I../.. -I$(DEVROOT_MINGW)/wxwin/wx/include -I./sqlitefk/src -I$(DEVROOT_MINGW)$(RELPATH_MAKE)/vendor/sqlite
MOD_INCL_MINGW_CPP=$(STD_INCL_MINGW_CPP) -I../.. -I$(DEVROOT_MINGW)/wxwin/wx/include -I./sqlitefk/src -I$(DEVROOT_MINGW)$(RELPATH_MAKE)/vendor/sqlite

MOD_INCL = -i=.\\sqlitefk\\src $(STD_INCL) -i=..\\.. -i=$(DEVROOT)\\wxwin\\wx\\include -i=$(DEVROOT)$(RELPATH)\\vendor\\sqlite
MOD_INCL_CPP=$(STD_INCL_CPP) -i=../.. -i=$(DEVROOT_MAKE)/wxwin/wx/include -i=./sqlitefk/src -i=$(DEVROOT_MAKE)$(RELPATH_MAKE)/vendor/sqlite

LIBS = $(BASE_LIBS) $(DEVROOT_MAKE)/projects/dll/libs/lbhook.lib, $(DEVROOT_MAKE)/projects/dll/libs/sqlite3.lib, \
	$(wxBase)$(SLASH)wat_dll$(SLASH)wxmsw$(WX_VERSION)$(WX_DEBUG).lib

MINGWLIBS += -L$(DEVROOT_MINGW)$(SLASH)projects$(SLASH)dll$(SLASH)libs
MINGWLIBS += $(MINGWLIBS_WXGUI) -lwxWrapperDLL -lsqlite3 -llbHook

CPP_MINGW_DLLOPS += -DWXUSINGDLL -DSQLITE_ENABLE_COLUMN_METADATA -DDONT_USE_DATABASE_LAYER_EXCEPTIONS -DSUPPORT_FOREIGN_KEYS -DBUILD_LIBRARY

CPP_DLLOPS+= -xs /DWXUSINGDLL /DSQLITE_ENABLE_COLUMN_METADATA -DDONT_USE_DATABASE_LAYER_EXCEPTIONS -DSUPPORT_FOREIGN_KEYS -DBUILD_LIBRARY
C_DLLOPS+= -DBUILD_LIBRARY

# use global setup
#COMPILER=MICROSOFT
ifeq ($(COMPILER), MICROSOFT)
MOD_INCL = $(STD_INCL_MICROSOFT)
MOD_INCL += $(foreach s, $(INCLS), /I "$s")
LIBS = Q:/develop/Tools/msc/VC98/Lib/odbc32.lib
CC=Cl
C_DLLOPS= $(C_DLLOPS_MICROSOFT$(MODE))
C_EXEOPS= $(C_EXEOPS_MICROSOFT$(MODE))
C_LIBOPS= $(C_LIBOPS_MICROSOFT$(MODE))
LINK=  $(LINK_MICROSOFT)
L_DLLOPS= $(L_DLLOPS_MICROSOFT)
LNKDLLOPS = $(L_DLLOPS_MICROSOFT)
endif

#OBJDEP=../lbHook/lbHook.o
# ../lbHook/conio.o
endif

ifeq ($(OSTYPE), solaris)
MOD_INCL=$(STD_INCL) -I ../.. -I $(DEVROOT)$(RELPATH)/vendor/sqlite
C_SOOPS_WX = -DOSX -DUNIX -DLINUX `wx-config --inplace --cxxflags` -DSQLITE_ENABLE_COLUMN_METADATA -DDONT_USE_DATABASE_LAYER_EXCEPTIONS -DSUPPORT_FOREIGN_KEYS -DBUILD_LIBRARY
C_SOOPS= $(C_SOOPS_WX)
OBJDEP=
VENDORLIBS=-L$(prefix)/lib -llbHook /usr/local/lib/libodbc.so
endif    
ifeq ($(OSTYPE), linux)
CC=$(CPP)
MOD_INCL=$(STD_INCL) -I ../.. -I $(DEVROOT)$(RELPATH)/vendor/sqlite
C_SOOPS_WX = $(DEBUG_CXX_FLAGS) -DOSX -DUNIX -DLINUX `wx-config --inplace --cxxflags` -DSQLITE_ENABLE_COLUMN_METADATA -DDONT_USE_DATABASE_LAYER_EXCEPTIONS -DSUPPORT_FOREIGN_KEYS -DBUILD_LIBRARY
C_SOOPS= $(C_SOOPS_WX)
OBJDEP=
VENDORLIBS=-L$(prefix)/lib -llbHook `odbc_config --prefix`/lib/libodbc.so
endif    
ifeq ($(OSTYPE), linux-debian-ppc)
MOD_INCL=$(STD_INCL) -I ../.. -I $(DEVROOT)$(RELPATH)/vendor/sqlite
C_SOOPS_WX = -g -DOSX -DUNIX -DLINUX `wx-config --inplace --cxxflags` -DSQLITE_ENABLE_COLUMN_METADATA -DDONT_USE_DATABASE_LAYER_EXCEPTIONS -DSUPPORT_FOREIGN_KEYS -DBUILD_LIBRARY 
C_SOOPS= $(C_SOOPS_WX)
OBJDEP=
VENDORLIBS=-L$(prefix)/lib -llbHook
endif    


ifeq ($(LB_USE_FRAMEWORKS), yes)

ifeq ($(OSTYPE), osx)
MOD_INCL=$(STD_INCL) -I ../.. -I $(DEVROOT)$(RELPATH)/vendor/sqlite
C_SOOPS_WX = $(C_OPS) `wx-config --inplace --cxxflags` -DSQLITE_ENABLE_COLUMN_METADATA -DDONT_USE_DATABASE_LAYER_EXCEPTIONS -DSUPPORT_FOREIGN_KEYS -DBUILD_LIBRARY
C_SOOPS= $(C_SOOPS_WX)
VENDORLIBS=
LDFLAGS=-lc /usr/lib/libgcc_s.1.dylib -L$(HOME)/lib -llbsqlite3
#L_OPS=-lc /usr/lib/libodbc.dylib -lc /usr/lib/libgcc_s.1.dylib 
LIBS=$(L_SOOPS) $(MPATROL) -F$(HOME)/lib -framework lbHook
endif    

endif

ifeq ($(LB_USE_FRAMEWORKS), no)

ifeq ($(OSTYPE), osx)
MOD_INCL=$(STD_INCL)
C_SOOPS_WX = -DOSX -DUNIX -DLINUX `wx-config --inplace --cxxflags` -DSQLITE_ENABLE_COLUMN_METADATA -DDONT_USE_DATABASE_LAYER_EXCEPTIONS -DSUPPORT_FOREIGN_KEYS -DBUILD_LIBRARY
C_SOOPS= $(C_SOOPS_WX)
OBJDEP=
VENDORLIBS=$(HOME)/lib/lbHook.so /usr/lib/libiodbc.dylib
endif    

endif
