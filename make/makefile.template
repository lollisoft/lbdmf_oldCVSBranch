# Standard template

ifeq ($(OSTYPE), Cross_OW)
ifeq ($(CRUISECONTROL), yes)
RELPATH=
RELPATH_MAKE=
else
RELPATH_MAKE=/Projects/CPP
RELPATH=/Projects/CPP
endif
DEVROOT_MAKE=$(DEVROOT)
include $(DEVROOT)$(RELPATH)/make/STD_MAKE
endif

ifeq ($(OSTYPE), Windows_NT)
ifeq ($(CRUISECONTROL), yes)
RELPATH_MAKE=\Projects\CPP
RELPATH=//Projects//CPP
else
RELPATH_MAKE=\Projects\CPP
RELPATH=//Projects//CPP
endif
include $(DEVROOT_MAKE)$(RELPATH_MAKE)/make/STD_MAKE

# Rule to overcome the possible override of path with recursive make

DEVROOT_MINGW=$(DEVLW)/$(BASE_MAKE)

endif

ifeq ($(OSTYPE), linux-debian-ppc)
ifeq ($(CRUISECONTROL), yes)
RELPATH=
else
RELPATH=/Projects/CPP
endif
include $(DEVROOT)$(RELPATH)/make/STD_MAKE
endif

ifeq ($(OSTYPE), solaris)
ifeq ($(CRUISECONTROL), yes)
RELPATH=
else
RELPATH=/Projects/CPP
endif
include $(DEVROOT)$(RELPATH)/make/STD_MAKE
endif

ifeq ($(OSTYPE), linux)
ifeq ($(CRUISECONTROL), yes)
RELPATH=
else
RELPATH=/Projects/CPP
endif
include $(DEVROOT)$(RELPATH)/make/STD_MAKE
endif

ifeq ($(OSTYPE), osx)
ifeq ($(CRUISECONTROL), yes)
RELPATH=
else
RELPATH=/Projects/CPP
endif
include $(DEVROOT)$(RELPATH)/make/STD_MAKE
endif

ifndef prefix
prefix=$(HOME)
endif

exec_prefix=$(prefix)
bindir=$(exec_prefix)/bin
sbindir=$(exec_prefix)/sbin
libdir=$(exec_prefix)/lib
plugindir=$(exec_prefix)/plugins

INSTALL=install
INSTALL_PROGRAM=$(INSTALL)
ifeq ($(OSTYPE), linux)
STRIP=strip -s
endif
ifeq ($(OSTYPE), linux-debian-ppc)
STRIP=strip -s
endif
ifeq ($(OSTYPE), solaris)
STRIP=strip 
endif
